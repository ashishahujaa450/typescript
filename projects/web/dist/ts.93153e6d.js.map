{"version":3,"sources":["src/ts/Models/User.ts","src/ts/index.ts"],"names":[],"mappings":";;;;;;AAOA,ACPA,IDOA,ACPA,IDOA,ECPA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA;AAAA,ACLA,IAAM,IAAI,GAAG,CDKb,GCLiB,MAAA,CAAA,IAAJ,CAAS;ADQpB,ACRsB,EAAA,IAAI,EAAE,GDQ5B,IAAA,CAAoB,ACRA,IDQpB,EAAmC;AAAf,ACRkB,EAAA,GAAG,EAAE,EDQvB,IAAA,GAAA,IAAA;AAFpB,ACNoB,CAAT,CAAb,ODME,MAAA,GAAwC,EAAxC;AAEuC,ACNzC,IAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,YAAA;AACf,EAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;ADOA,ACND,CAFD,CDQE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;AAClB,ACNJ,IAAI,CAAC,EAAL,CAAQ,GDMG,ICNX,CDMgB,CCNC,GDMN,CAAU,QAAV,ACNM,CDMb;AACD,ACND,EAAA,CDIA,MCJO,CAAC,GAAR,CAAY,cAAZ;AACD,CAFD;ADSE,ACNF,EDME,ECNE,CAAC,CDMH,CAAA,ACNF,CAAQ,QDMN,ACNF,CDME,CCNgB,EDMhB,GAAA,OCNgB,GDMZ,MAAJ,EAAqB;AACnB,ACNF,EAAA,EDME,KCNK,CDMC,ACNA,CDMC,ECNT,CAAY,GDMV,CAAc,KAAK,IAAnB,EAAyB,CCN3B,KDME;AACD,ACNF,CAFD,EDME,CATF,CAaE;ACNF,IAAI,CAAC,OAAL,CAAa,QAAb;AAEA,OAAO,CAAC,GAAR,CAAY,IAAZ;ADKE,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,OAAO,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA1C;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,QAAb;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,OAAzB;AACD,GAJD,CAdF,CAoBE;;;AACA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,OAAO,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAhB;;AAEA,QAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,KAAmB,CAAnC,EAAsC;AACpC,YAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAC,QAAD,EAAmB;AACjC,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AAhCA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"ts.93153e6d.js","sourceRoot":"..","sourcesContent":["interface userProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: userProps) {}\r\n\r\n  get(propName: string): string | number {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: userProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  //registering event in events object\r\n  on(eventName: string, callback: Callback) {\r\n    const handler = this.events[eventName] || [];\r\n    handler.push(callback);\r\n    this.events[eventName] = handler;\r\n  }\r\n\r\n  //trigger event using foreach\r\n  trigger(eventName: string): void {\r\n    const handler = this.events[eventName];\r\n\r\n    if (!handler || handler.length === 0) {\r\n      throw new Error('event doesnt exists');\r\n    }\r\n\r\n    handler.forEach((callback: Callback) => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","import { User } from './Models/User';\r\n\r\nconst user = new User({ name: 'ashish', age: 20 });\r\n\r\nuser.on('click', () => {\r\n  console.log('change no 1');\r\n});\r\nuser.on('click', () => {\r\n  console.log('oops click 2');\r\n});\r\nuser.on('change', () => {\r\n  console.log('orignal change');\r\n});\r\n\r\nuser.trigger('change');\r\n\r\nconsole.log(user);\r\n"]}